{% schema %}
{
  "name": "Custom Product Grid",
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Section Title",
      "default": "Featured Products"
    }
  ],
  "blocks": [
    {
      "type": "product",
      "name": "Product",
      "settings": [
        {
          "type": "product",
          "id": "product",
          "label": "Select product"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Custom Product Grid",
      "category": "Products"
    }
  ]
}
{% endschema %}

<div class="custom-grid-container page-width">
  <h2 class="custom-grid-title">{{ section.settings.title }}</h2>
  <div class="custom-grid">
    {% for block in section.blocks %}
      {% assign product = all_products[block.settings.product] %}
      {% if product %}
        <div class="custom-grid-item" data-product-id="{{ product.id }}">
          <img src="{{ product.featured_image | img_url: '400x' }}" alt="{{ product.title }}">
          <h3>{{ product.title }}</h3>
          <p>{{ product.price | money }}</p>
          <button class="quick-add-btn" data-product-handle="{{ product.handle }}">
            Quick Add
          </button>
        </div>
      {% endif %}
    {% endfor %}
  </div>
</div>

<!-- POPUP -->
<div id="popup" class="popup">
  <div class="popup-content">
    <button class="popup-close">&times;</button>
    <div id="popup-body"></div>
  </div>
</div>

<style>
/* === POPUP STYLES === */
.popup {
  display: none;
  position: fixed;
  z-index: 1000;
  left: 0; top: 0;
  width: 100%; height: 100%;
  background-color: rgba(0,0,0,0.5);
  align-items: center; justify-content: center;
  padding: 1rem;
}

.popup-content {
  background: #fff;
  border: 1px solid #e5e5e5;
  border-radius: 8px;
  max-width: 500px;
  width: 100%;
  padding: 2rem;
  position: relative;
  box-shadow: 0 4px 15px rgba(0,0,0,0.1);
}

.popup-close {
  position: absolute;
  top: 10px; right: 15px;
  font-size: 1.5rem;
  background: none;
  border: none;
  cursor: pointer;
}

.popup img {
  max-width: 100%;
  border-radius: 6px;
  margin-bottom: 1rem;
}

.popup h3 {
  font-size: 1.25rem;
  margin-bottom: 0.5rem;
}

.popup p {
  margin-bottom: 1rem;
  color: #555;
}

/* Variant buttons */
.variant-options {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
  margin-bottom: 1rem;
}

.variant-btn {
  padding: 0.5rem 1rem;
  border: 1px solid #ccc;
  background: #fff;
  cursor: pointer;
  font-size: 0.9rem;
  border-radius: 4px;
  transition: all 0.2s ease;
}

.variant-btn.selected {
  border-color: #000;
  background: #f9f9f9;
  font-weight: 600;
}

/* Size dropdown */
.popup select {
  width: 100%;
  padding: 0.6rem;
  border: 1px solid #ccc;
  border-radius: 4px;
  margin-bottom: 1.2rem;
  font-size: 0.95rem;
}

/* Add to Cart button */
.add-to-cart-btn {
  width: 100%;
  padding: 0.8rem;
  background: #000;
  color: #fff;
  border: none;
  cursor: pointer;
  font-size: 1rem;
  border-radius: 6px;
  transition: background 0.3s ease;
}

.add-to-cart-btn:hover {
  background: #333;
}

/* Responsive */
@media (max-width: 600px) {
  .popup-content {
    max-width: 90%;
    padding: 1.2rem;
  }
}
</style>

<script>
document.addEventListener("DOMContentLoaded", function () {
  const popup = document.getElementById("popup");
  const popupBody = document.getElementById("popup-body");
  const closeBtn = document.querySelector(".popup-close");

  document.querySelectorAll(".quick-add-btn").forEach(btn => {
    btn.addEventListener("click", async function () {
      const handle = this.getAttribute("data-product-handle");
      const response = await fetch(`/products/${handle}.js`);
      const product = await response.json();

      let variantOptionsHtml = "";
      product.options.forEach((option, index) => {
        if (option.name.toLowerCase() === "color") {
          variantOptionsHtml += `<div class="variant-options" data-option-index="${index}">
            ${option.values.map(value =>
              `<button type="button" class="variant-btn" data-value="${value}">${value}</button>`
            ).join("")}
          </div>`;
        }
      });

      const sizeOption = product.options.find(opt => opt.name.toLowerCase() === "size");
      let sizeDropdownHtml = "";
      if (sizeOption) {
        sizeDropdownHtml = `<select id="size-select">
          ${sizeOption.values.map(value => `<option value="${value}">${value}</option>`).join("")}
        </select>`;
      }

      popupBody.innerHTML = `
        <img src="${product.featured_image}" alt="${product.title}">
        <h3>${product.title}</h3>
        <p>${(product.price / 100).toFixed(2)} ${Shopify.currency.active}</p>
        ${variantOptionsHtml}
        ${sizeDropdownHtml}
        <button class="add-to-cart-btn" data-product-id="${product.id}">Add to Cart</button>
      `;

      // handle variant selection
      popupBody.querySelectorAll(".variant-btn").forEach(btn => {
        btn.addEventListener("click", function () {
          const index = this.closest(".variant-options").dataset.optionIndex;
          popupBody.querySelectorAll(`[data-option-index="${index}"] .variant-btn`).forEach(b => b.classList.remove("selected"));
          this.classList.add("selected");
        });
      });

      // add to cart
      popupBody.querySelector(".add-to-cart-btn").addEventListener("click", async function () {
        const selectedOptions = [];
        product.options.forEach((option, index) => {
          if (option.name.toLowerCase() === "color") {
            const selectedBtn = popupBody.querySelector(`[data-option-index="${index}"] .variant-btn.selected`);
            if (selectedBtn) selectedOptions[index] = selectedBtn.dataset.value;
          } else if (option.name.toLowerCase() === "size") {
            const sizeSelect = document.getElementById("size-select");
            if (sizeSelect) selectedOptions[index] = sizeSelect.value;
          }
        });

        const selectedVariant = product.variants.find(variant =>
          variant.options.every((opt, i) => opt === selectedOptions[i])
        );

        if (selectedVariant) {
          await fetch("/cart/add.js", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ id: selectedVariant.id, quantity: 1 })
          });

          // Special condition: Black + Medium => add Soft Winter Jacket
          const options = selectedVariant.options.map(opt => opt.toLowerCase().trim());
          if (options.includes("black") && options.includes("medium")) {
            const jacket = {{ all_products['soft-winter-jacket'].variants.first.id }};
            await fetch("/cart/add.js", {
              method: "POST",
              headers: { "Content-Type": "application/json" },
              body: JSON.stringify({ id: jacket, quantity: 1 })
            });
          }

          alert("Added to cart!");
          popup.style.display = "none";
        } else {
          alert("Please select all options.");
        }
      });

      popup.style.display = "flex";
    });
  });

  closeBtn.addEventListener("click", () => popup.style.display = "none");
  window.addEventListener("click", e => { if (e.target === popup) popup.style.display = "none"; });
});
</script>
