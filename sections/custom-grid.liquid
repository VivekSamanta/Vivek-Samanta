<!-- GRID SECTION -->
<div class="custom-grid-container page-width">
  <h2 class="custom-grid-title">{{ section.settings.title }}</h2>
  <div class="custom-grid">
    {% for block in section.blocks %}
      <div class="custom-grid-item" data-handle="{{ block.settings.product }}">
        {% assign product = all_products[block.settings.product] %}
        {% if product != blank %}
          <div class="custom-grid-card">
            <img src="{{ product.featured_image | img_url: '400x' }}" alt="{{ product.title }}" />
            <h3>{{ product.title }}</h3>
            <button class="quick-add-btn" data-product-handle="{{ block.settings.product }}">
              Quick Add
            </button>
          </div>
        {% endif %}
      </div>
    {% endfor %}
  </div>
</div>

<!-- POPUP -->
<div id="quickAddPopup" class="popup-overlay" style="display: none;">
  <div class="popup-card">
    <button id="popupClose" class="popup-close">×</button>
    <div class="popup-content">
      <img id="popupProductImage" src="" alt="" class="popup-image" />
      <div class="popup-details">
        <h2 id="popupProductTitle"></h2>
        <p id="popupProductPrice"></p>

        <!-- Variant Options -->
        <div id="popupVariantOptions" class="variant-options"></div>

        <!-- Size Dropdown -->
        <div id="popupSizeDropdown" class="size-dropdown">
          <label for="sizeSelect">Size</label>
          <select id="sizeSelect"></select>
        </div>

        <!-- Add to Cart -->
        <button id="popupAddToCart" class="popup-add-to-cart">
          Add to Cart →
        </button>
      </div>
    </div>
  </div>
</div>

<style>
/* ========== POPUP STYLES ========== */
.popup-overlay {
  position: fixed;
  inset: 0;
  background: rgba(0,0,0,0.6);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000;
}

.popup-card {
  background: #fff;
  border: 1px solid #e5e5e5;
  border-radius: 12px;
  max-width: 600px;
  width: 90%;
  padding: 24px;
  box-shadow: 0 10px 25px rgba(0,0,0,0.15);
  position: relative;
}

.popup-close {
  position: absolute;
  top: 12px;
  right: 12px;
  background: none;
  border: none;
  font-size: 22px;
  cursor: pointer;
}

.popup-content {
  display: flex;
  gap: 20px;
  flex-wrap: wrap;
}

.popup-image {
  width: 200px;
  border: 1px solid #ddd;
  border-radius: 8px;
}

.popup-details {
  flex: 1;
  min-width: 220px;
}

.popup-details h2 {
  font-size: 20px;
  margin: 0 0 8px;
}

.popup-details p {
  font-size: 16px;
  margin: 0 0 16px;
  color: #444;
}

/* Variant buttons */
.variant-options {
  display: flex;
  flex-wrap: wrap;
  gap: 8px;
  margin-bottom: 16px;
}
.variant-option {
  border: 1px solid #ccc;
  background: #fff;
  padding: 8px 14px;
  border-radius: 6px;
  cursor: pointer;
  font-size: 14px;
  transition: all 0.2s ease;
}
.variant-option.active,
.variant-option:hover {
  border-color: #000;
  background: #f5f5f5;
}

/* Size dropdown */
.size-dropdown {
  margin-bottom: 20px;
}
.size-dropdown label {
  display: block;
  font-size: 14px;
  margin-bottom: 6px;
  font-weight: 500;
}
.size-dropdown select {
  width: 100%;
  padding: 10px 12px;
  border: 1px solid #ccc;
  border-radius: 6px;
  font-size: 14px;
}

/* Add to Cart button */
.popup-add-to-cart {
  width: 100%;
  background: #000;
  color: #fff;
  padding: 14px 0;
  border: none;
  border-radius: 8px;
  font-size: 16px;
  font-weight: 600;
  cursor: pointer;
  transition: background 0.2s ease;
}
.popup-add-to-cart:hover {
  background: #333;
}

/* Responsive */
@media (max-width: 600px) {
  .popup-content {
    flex-direction: column;
    align-items: center;
  }
  .popup-image {
    width: 100%;
    max-width: 280px;
  }
  .popup-details {
    width: 100%;
  }
}
</style>

<script>
document.addEventListener("DOMContentLoaded", function () {
  const popup = document.getElementById("quickAddPopup");
  const popupClose = document.getElementById("popupClose");
  const popupProductImage = document.getElementById("popupProductImage");
  const popupProductTitle = document.getElementById("popupProductTitle");
  const popupProductPrice = document.getElementById("popupProductPrice");
  const popupVariantOptions = document.getElementById("popupVariantOptions");
  const sizeSelect = document.getElementById("sizeSelect");
  const popupAddToCart = document.getElementById("popupAddToCart");

  let currentProduct = null;
  let selectedVariant = null;

  document.querySelectorAll(".quick-add-btn").forEach((btn) => {
    btn.addEventListener("click", async function () {
      const handle = btn.dataset.productHandle;

      const res = await fetch(`/products/${handle}.js`);
      const product = await res.json();
      currentProduct = product;

      popupProductImage.src = product.featured_image;
      popupProductTitle.textContent = product.title;
      popupProductPrice.textContent = Shopify.formatMoney(product.price);

      popupVariantOptions.innerHTML = "";
      product.options.forEach((option, index) => {
        const wrapper = document.createElement("div");
        wrapper.classList.add("variant-options");

        product.variants.forEach((variant) => {
          const optVal = variant.options[index];
          if (!optVal) return;

          const btn = document.createElement("button");
          btn.classList.add("variant-option");
          btn.textContent = optVal;

          btn.addEventListener("click", () => {
            document.querySelectorAll(".variant-option").forEach((b) =>
              b.classList.remove("active")
            );
            btn.classList.add("active");
            selectedVariant = variant;
          });

          wrapper.appendChild(btn);
        });

        popupVariantOptions.appendChild(wrapper);
      });

      // Fill sizes if available
      sizeSelect.innerHTML = "";
      product.options.forEach((option, index) => {
        if (option.toLowerCase().includes("size")) {
          const sizeValues = [...new Set(product.variants.map(v => v.options[index]))];
          sizeValues.forEach((size) => {
            const opt = document.createElement("option");
            opt.value = size;
            opt.textContent = size;
            sizeSelect.appendChild(opt);
          });
        }
      });

      popup.style.display = "flex";
    });
  });

  popupClose.addEventListener("click", () => (popup.style.display = "none"));

  popupAddToCart.addEventListener("click", async function () {
    if (!selectedVariant) {
      alert("Please select a variant.");
      return;
    }

    const options = selectedVariant.options.map(opt => opt.toLowerCase().trim());

    // ✅ Fixed condition
    if (options.includes("black") && options.includes("medium")) {
      await fetch("/cart/add.js", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          id: currentProduct.variants[0].id,
          quantity: 1,
        }),
      });
      alert("Soft Winter Jacket auto-added!");
    }

    await fetch("/cart/add.js", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({
        id: selectedVariant.id,
        quantity: 1,
      }),
    });

    alert("Added to cart!");
    popup.style.display = "none";
  });
});
</script>
